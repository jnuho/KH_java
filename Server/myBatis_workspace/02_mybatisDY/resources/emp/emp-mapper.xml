<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="emp">

  <select id="selectSearch1" parameterType="map" resultType="map">
    <!-- # : set get -->
    <!-- $ : literal value is simply replaced -->
    <!-- 카테고리(리터럴값)에 의한 동적쿼리 실행 -->
    SELECT * FROM EMPLOYEE
      WHERE ${type} LIKE '%'||#{key}||'%'
  </select>

  
<!-- MyBatis가 제공하는 동적 SQL 구문 중에서 자바의 switch 문 또는 오라클의 case 표현식과 같은 역할을 수행하는 choose 구문을 사용하여 
아래 명시된 내용을 처리하는 select 앨리먼트를 완성하시오.
Select 앨리먼트 아이디 : findActiveBlogLike
반환자료형과 매개변수자료형 별칭 : Blog
조회할 테이블명 : blog 의 모든 컬럼 조회
객체의 필드명과 테이블의 컬럼명은 동일한 COMMAND 객체임.
조건절의 공통조건 : state 컬럼값이 'ACTIVE'
추가조건 1 : title 컬럼값이 널이 아니면 title 컬럼값 like 비교값
추가조건 2 : author 컬럼값과 author.name 컬럼값이 널이 아니면 author.name like 비교값
그외 조건 : featured 컬럼값이 1과 같은 행들만 조회함
 -->
  <!-- <select id="findActiveBlogLike" parameterType="Blog" resultType="Blog">
    SELECT * FROM BLOG
    WHERE 1=1
      AND state ='ACTIVE'
    <if test="title != null and title != ''">
      AND ${title} LIKE '%'||#{title}||'%'
    </if>
    <if test="author != null and author != '' and author.name != null and author.name != ''">
      AND ${author.name} LIKE '%'||#{author.name}||'%'
    </if>
    AND ${featured} =1
  </select> -->

  <select id="selectSearch2" parameterType="map" resultType="map">
    SELECT * FROM
      (SELECT A.*,
         CASE WHEN SUBSTR(EMP_NO, 8,1) IN ('1','3')
           THEN '남' ELSE '여' END AS GENDER
         FROM EMPLOYEE A)
     WHERE 1=1
     <if test="type != null and type != ''">
       AND ${type} LIKE '%'||#{key}||'%'
     </if>
     <if test="gender != null and gender != ''">
      AND GENDER = #{gender}
    </if>
    <if test="salary != null and salary != ''">
      
       <!-- <if test="flag eq 'ge'">
         AND SALARY <![CDATA[>=]]> #{salary}
       </if>
       <if test="flag eq 'le'">
         AND SALARY <![CDATA[<=]]> #{salary}
       </if> -->
      <choose>
        <when test="flag eq 'ge'">
          AND SALARY <![CDATA[>=]]> #{salary}
        </when>
        <when test="flag eq 'le'">
          AND SALARY <![CDATA[<=]]> #{salary}
        </when>
      </choose>
    </if>
    <if test="hireDate !=null and hireDate != ''">
      <choose>
        <when test="hireFlag eq 'ge'">
          AND TO_DATE(TO_CHAR(HIRE_DATE, 'yyyy-MM-dd'), 'yyyy-MM-dd')
            <![CDATA[>=]]> TO_DATE(#{hireDate} , 'yyyy-MM-dd')
        </when>
        <when test="hireFlag eq 'le'">
          AND TO_DATE(TO_CHAR(HIRE_DATE, 'yyyy-MM-dd'), 'yyyy-MM-dd')
            <![CDATA[<=]]> TO_DATE(#{hireDate} , 'yyyy-MM-dd')
          <!-- AND HIRE_DATE <![CDATA[<=]]> TO_DATE(#{hireDate} , 'YYYY-MM-DD') -->
        </when>
      </choose>
    </if>
    <!-- 다중 값을 비교할 때 -->
    <!-- 1.job_code == 'J1' or job_code=='J2'
    2.job_code IN ('J1', 'J2',...) --> -->
    <if test="jobs != null and jobs != '' ">
      AND JOB_CODE IN
      <foreach collection="jobs" item="item"
        index="i" open="(" separator="," close=")"> <!-- ('J1', 'J2',...) -->
        #{item}
      </foreach>
    </if>
  </select>

  <select id="selectEmpList" resultType="map">
    select * from employee
  </select>

  <select id="selectEmpCount" resultType="_int">
    select count(*) from employee
  </select>

</mapper>
